# ------------------------------------------------------------------------------
#  Auto Merge on Approval Workflow
#
#  Purpose   : Automatically merge PRs once all approval and CI conditions pass.
#  Triggers  : Pull request events, review submissions, and completed checks.
#  Maintainer: @mrz1836
# ------------------------------------------------------------------------------

name: auto-merge-on-approval

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled, edited]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]
  status: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Attempt auto-merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request ?? (await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            })).data;
            const prNumber = pr.number;
            const title = pr.title || "";
            const labels = pr.labels.map(l => l.name);
            const isDraft = pr.draft;
            const requestedReviewers = pr.requested_reviewers || [];

            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });
            const approvals = reviews.filter(r => r.state === 'APPROVED').length;
            const changesRequested = reviews.filter(r => r.state === 'CHANGES_REQUESTED').length;

            const sha = pr.head.sha;
            const { data: statuses } = await github.rest.repos.listCommitStatusesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: sha,
            });
            const requiredChecks = [
              'test (1.22.x, ubuntu-latest)',
              'test (1.23.x, ubuntu-latest)',
              'test (1.24.x, ubuntu-latest)',
              'Analyze (go)',
            ];
            const checksPass = requiredChecks.every(name => {
              const status = statuses.find(s => s.context === name);
              return status && status.state === 'success';
            });

            const titleHasWip = /wip/i.test(title);
            const hasWipLabel = labels.includes('work-in-progress');

            if (
              approvals >= 1 &&
              requestedReviewers.length === 0 &&
              changesRequested === 0 &&
              checksPass &&
              !titleHasWip &&
              !hasWipLabel &&
              !isDraft
            ) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: 'merge',
              });
              console.log(`Pull request #${prNumber} merged.`);
            } else {
              console.log('Conditions not met for automerge.');
            }
